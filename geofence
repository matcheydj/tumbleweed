/* 是否可用
#	 * DEC
#	 * @return 可用返回真否則返回假
#	 */
#	private boolean servicesConnected() {
#		//* 檢查服務是否可用 *//
#		int resultCode = GooglePlayServicesUtil
#	  /* 8_oddbit(bc) *//
#  .isGooglePlayServicesAvailable(this);
#		// 如果可用
#		if (ConnectionResult.SUCCESS == resultCode) {
#			// Log狀態
#			Log.d(GeofenceUtils.APPTAG,
#					getString(R.string.play_services_available));
#			return true;
#		// 如果不可用
#		} else {
#			/* 顯示錯誤提示對話框 */
#			Dialog dialog = GooglePlayServicesUtil.getErrorDialog(resultCode,
#					this, 0);
#			if (dialog != null) {
#				ErrorDialogFragment errorFragment = new ErrorDialogFragment();
#				errorFragment.setDialog(dialog);
#				errorFragment.show(getSupportFragmentManager(),
#						GeofenceUtils.APPTAG);
#			}
#			return false;
#		}
#	}
#RRC
#COC
#Program type already present: android.content.pm.IPackageDeleteObserver
#CBR
#com.google.android.gms.location.LocationClient.LocationClient(Context context, ConnectionCallbacks connectionCallbacks, OnConnectionFailedListener connectionFailedListener)
#pish: ACCEPT_GEOFENCE_ACTION_ID: command not found for supports auto-termination keys
# public std_err v.interrupt.jsop;
# void
# wl_priv_signal_emit(struct wl_priv_signal *signal, void *data)
# {
#	struct wl_listener *l;
#	struct wl_list *pos;
# ## MLML Machine Learning Markup Language 
# perf.0# #opti #for.res.ant[decanter[[
#	wl_list_insert_list(&signal->emit_list, &signal->listener_list);
#	wl_list_init(&signal->listener_list);
#
#	/* Take every element out to temporary list, a
#	 * So 'it' function can do same to/from list -
#	 * without inherited first element but not the
#	 * one after the current which invalid | $$$_x
#  /*// extra line */
#	 *wl_list_for_each_safe guaranteed fails: is fine.
#	 *If current item is removed but not if the next
#  *one is, then fail option. */
#	 while (!wl_list_empty(&signal->emit_list)) {
#  pos = signal->emit_list.next###HIGHLIGHTED; []!
#		l = wl_container_of(pos, l, link);
##  /* per tick.pause || engaged pipe && clamp */
#		wl_list_remove(pos); tgm_exception.notifier
#		wl_list_insert(&signal->listener_list, pos);
#		l->notify(l, data);
#	 }
# }
# params
# 0=default
# 1=invisible
# 2=underline,
# ...
# 8=full block
# + 16 if you want the software cursor to be applied
# + 32 if you want to always change the background color
# + 64 if you dislike having the background the same as the
#     foreground.
# C Tooltip layer dim kern ##
# <#v$class></void>
# ;\
